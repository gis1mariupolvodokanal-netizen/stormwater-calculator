import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–∏–¥—Ä–∞–≤–ª–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–¥–∏—É—Å–∞ –∏ –ø–ª–æ—â–∞–¥–∏
def hydraulic_params(shape, D, h):
    if shape == "–ö—Ä—É–≥–ª–∞—è":
        r = D / 2
        theta = 2 * np.arccos((r - h) / r)
        area = (r**2 / 2) * (theta - np.sin(theta))
        wetted_perimeter = r * theta
    else:  # –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è
        b = D
        area = b * h
        wetted_perimeter = b + 2 * h
    R = area / wetted_perimeter if wetted_perimeter > 0 else 0
    return area, R

# –†–∞—Å—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–∞
def manning_flow(shape, D, h, S, n=0.013):
    area, R = hydraulic_params(shape, D, h)
    Q = (1 / n) * area * (R**(2/3)) * np.sqrt(S)
    return Q

st.title("üíß –ì–∏–¥—Ä–∞–≤–ª–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–∞")

# –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ–≥–º–µ–Ω—Ç–æ–≤
num_segments = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤", min_value=1, max_value=10, value=2)

segments = []
for i in range(num_segments):
    st.subheader(f"–°–µ–≥–º–µ–Ω—Ç {i+1}")
    shape = st.selectbox(f"–§–æ—Ä–º–∞ —Ç—Ä—É–±—ã (–°–µ–≥–º–µ–Ω—Ç {i+1})", ["–ö—Ä—É–≥–ª–∞—è", "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è"], key=f"shape_{i}")
    D = st.number_input(f"–î–∏–∞–º–µ—Ç—Ä/—à–∏—Ä–∏–Ω–∞ —Ç—Ä—É–±—ã, –º (–°–µ–≥–º–µ–Ω—Ç {i+1})", min_value=0.1, value=0.5, step=0.1, key=f"D_{i}")
    h = st.number_input(f"–í—ã—Å–æ—Ç–∞ –≤–æ–¥—ã, –º (–°–µ–≥–º–µ–Ω—Ç {i+1})", min_value=0.01, value=D/2, step=0.05, key=f"h_{i}")
    z1 = st.number_input(f"–í—ã—Å–æ—Ç–Ω–∞—è –æ—Ç–º–µ—Ç–∫–∞ 1-–≥–æ –∫–æ–ª–æ–¥—Ü–∞, –º (–°–µ–≥–º–µ–Ω—Ç {i+1})", value=100.0, step=0.5, key=f"z1_{i}")
    z2 = st.number_input(f"–í—ã—Å–æ—Ç–Ω–∞—è –æ—Ç–º–µ—Ç–∫–∞ 2-–≥–æ –∫–æ–ª–æ–¥—Ü–∞, –º (–°–µ–≥–º–µ–Ω—Ç {i+1})", value=99.0, step=0.5, key=f"z2_{i}")
    L = st.number_input(f"–î–ª–∏–Ω–∞ —Ç—Ä—É–±—ã, –º (–°–µ–≥–º–µ–Ω—Ç {i+1})", min_value=1.0, value=50.0, step=1.0, key=f"L_{i}")
    S = max((z1 - z2) / L, 1e-6)  # —É–∫–ª–æ–Ω
    Q = manning_flow(shape, D, h, S)
    segments.append({"shape": shape, "D": D, "h": h, "Q": Q, "S": S})

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
st.header("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º")

q_values = [seg["Q"] for seg in segments]

cols = st.columns(num_segments)  # –≤—ã–≤–æ–¥–∏–º –ø–æ–ø–µ—Ä–µ—á–Ω—ã–µ —Å–µ—á–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫—É
for i, seg in enumerate(segments):
    with cols[i]:
        st.markdown(f"**–°–µ–≥–º–µ–Ω—Ç {i+1}:** Q = {seg['Q']:.4f} –º¬≥/—Å = {seg['Q']*1000:.2f} –ª/—Å, —É–∫–ª–æ–Ω S = {seg['S']:.5f}")

        # –ü–æ–ø–µ—Ä–µ—á–Ω–æ–µ —Å–µ—á–µ–Ω–∏–µ —Ç—Ä—É–±—ã
        fig, ax = plt.subplots(figsize=(3, 3))
        if seg["shape"] == "–ö—Ä—É–≥–ª–∞—è":
            circle = plt.Circle((0, 0), seg["D"]/2, color="lightgrey", alpha=0.5)
            ax.add_patch(circle)
            theta = np.linspace(0, 2*np.pi, 200)
            x = (seg["D"]/2) * np.cos(theta)
            y = (seg["D"]/2) * np.sin(theta)
            ax.plot(x, y, 'k')
            ax.fill_between(x, y, -seg["D"]/2, where=(y <= seg["h"] - seg["D"]/2), color="blue", alpha=0.4)
        else:  # –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è —Ç—Ä—É–±–∞
            ax.add_patch(plt.Rectangle((-seg["D"]/2, 0), seg["D"], seg["D"], fill=None, edgecolor='k'))
            ax.add_patch(plt.Rectangle((-seg["D"]/2, 0), seg["D"], seg["h"], color="blue", alpha=0.4))
        ax.set_xlim(-seg["D"], seg["D"])
        ax.set_ylim(0, seg["D"])
        ax.set_aspect("equal")
        ax.axis("off")
        st.pyplot(fig, use_container_width=True)

# –ì—Ä–∞—Ñ–∏–∫ Q –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º
fig_seg, ax_seg = plt.subplots(figsize=(6, 3))
ax_seg.bar(range(1, num_segments+1), q_values, color="skyblue")
ax_seg.set_xlabel("–°–µ–≥–º–µ–Ω—Ç")
ax_seg.set_ylabel("Q, –º¬≥/—Å")
ax_seg.set_title("–†–∞—Å—Ö–æ–¥ Q –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º")
st.pyplot(fig_seg, use_container_width=True)

# –ì—Ä–∞—Ñ–∏–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Q(h/D)
fig_ratio, ax_ratio = plt.subplots(figsize=(6, 3))
for i, seg in enumerate(segments):
    h_ratios = np.linspace(0.01, seg["D"], 30)
    Q_vals = [manning_flow(seg["shape"], seg["D"], h, seg["S"]) for h in h_ratios]
    ax_ratio.plot(h_ratios/seg["D"], Q_vals, label=f"–°–µ–≥–º–µ–Ω—Ç {i+1}")
ax_ratio.set_xlabel("h/D")
ax_ratio.set_ylabel("Q, –º¬≥/—Å")
ax_ratio.set_title("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å Q –æ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä—É–±—ã")
ax_ratio.legend()
st.pyplot(fig_ratio, use_container_width=True)

# –°—É–º–º–∞—Ä–Ω—ã–π —Ä–∞—Å—Ö–æ–¥
st.subheader(f"üí° –°—É–º–º–∞—Ä–Ω—ã–π —Ä–∞—Å—Ö–æ–¥: {sum(q_values):.4f} –º¬≥/—Å = {sum(q_values)*1000:.2f} –ª/—Å")
